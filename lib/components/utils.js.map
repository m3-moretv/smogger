{"version":3,"sources":["../../src/components/utils.js"],"names":["entries","Object","bind","run","fn","normalizer","handler","acc","arr","concat","spreadToArgs","cb","props","normalizeUrlParams","subst","brackets","path","replace","formatSwaggerPath","formatRouterPath","objectPath","object","split","reduce","part","randomElement","random","int","length","compose","fns","f","g","xs","r","Array","isArray"],"mappings":";;;;;;;AAAA;;;;AAEO,MAAMA,OAA0C,GAAGC,MAAM,CAACD,OAAP,CAAeE,IAAf,CACxDD,MADwD,CAAnD;;;AAGA,MAAME,GAAoB,GAAGC,EAAE,IAAIA,EAAE,EAArC;;;;AAEA,MAAMC,UAGE,GAAGC,OAAO,IAAI,CAACC,GAAD,EAAMC,GAAN,KAAcD,GAAG,CAACE,MAAJ,CAAWH,OAAO,CAACE,GAAD,CAAlB,CAHpC;;;;AAKA,MAAME,YAEqB,GAAGC,EAAE,IAAIC,KAAK,IAAID,EAAE,CAAC,GAAGC,KAAJ,CAF/C;;;;AAIA,MAAMC,kBAAkB,GAAG,CAChCC,KADgC,EAEhCC,QAAiB,GAAG,KAFY,KAG5BC,IAAD,IAAkBA,IAAI,CAACC,OAAL,CAAaH,KAAb,EAAoBC,QAApB,CAHhB;;;AAKA,MAAMG,iBAA2C,GAAGL,kBAAkB,CAC3E,SAD2E,EAE3E,MAF2E,CAAtE;;AAKA,MAAMM,gBAA0C,GAAGN,kBAAkB,CAC1E,UAD0E,EAE1E,KAF0E,CAArE;;;AAKA,MAAMO,UAA6C,GAAG,CAACC,MAAD,EAASL,IAAT,KAC3DA,IAAI,CAACM,KAAL,CAAW,GAAX,EAAgBC,MAAhB,CAAuB,CAAChB,GAAD,EAAMiB,IAAN,KAAejB,GAAG,CAACiB,IAAD,CAAzC,EAAiDH,MAAjD,CADK;;;;AAGA,MAAMI,aAAuC,GAAGjB,GAAG,IACxDA,GAAG,CAACkB,gBAAOC,GAAP,CAAW,CAAX,EAAcnB,GAAG,CAACoB,MAAJ,GAAa,CAA3B,CAAD,CADE;;;;AAGA,MAAMC,OAAO,GAAG,CAAC,GAAGC,GAAJ,KACrBA,GAAG,CAACP,MAAJ,CAAW,CAACQ,CAAD,EAAIC,CAAJ,KAAU,CAAC,GAAGC,EAAJ,KAAW;AAC9B,QAAMC,CAAC,GAAGF,CAAC,CAAC,GAAGC,EAAJ,CAAX;AACA,SAAOE,KAAK,CAACC,OAAN,CAAcF,CAAd,IAAmBH,CAAC,CAAC,GAAGG,CAAJ,CAApB,GAA6BH,CAAC,CAACG,CAAD,CAArC;AACD,CAHD,CADK","sourcesContent":["import random from 'random';\n\nexport const entries: (obj: {}) => Array<[string, any]> = Object.entries.bind(\n  Object\n);\nexport const run: Function => any = fn => fn();\n\nexport const normalizer: Function => (\n  Array<any>,\n  Array<any>\n) => Array<any> = handler => (acc, arr) => acc.concat(handler(arr));\n\nexport const spreadToArgs: (\n  cb: Function\n) => (obj: {} | Array<any>) => any = cb => props => cb(...props);\n\nexport const normalizeUrlParams = (\n  subst: RegExp,\n  brackets?: string = ':$1'\n) => (path: string) => path.replace(subst, brackets);\n\nexport const formatSwaggerPath: (path: string) => string = normalizeUrlParams(\n  /:(\\w+)/g,\n  '{$1}'\n);\n\nexport const formatRouterPath: (path: string) => string = normalizeUrlParams(\n  /{(\\w+)}/g,\n  ':$1'\n);\n\nexport const objectPath: (object: {}, path: string) => any = (object, path) =>\n  path.split('.').reduce((acc, part) => acc[part], object);\n\nexport const randomElement: (arr: Array<any>) => any = arr =>\n  arr[random.int(0, arr.length - 1)];\n\nexport const compose = (...fns: any) =>\n  fns.reduce((f, g) => (...xs) => {\n    const r = g(...xs);\n    return Array.isArray(r) ? f(...r) : f(r);\n  });\n"],"file":"utils.js"}