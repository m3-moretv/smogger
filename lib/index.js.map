{"version":3,"sources":["../src/index.js"],"names":["Smogger","config","spec","pathToSpec","port","imageProvider","SwaggerParser","dereference","mocker","getMethod","router","Number","paths"],"mappings":";;;;;;;AAAA;;AAEA;;AACA;;AACA;;AACA;;AACA;;;;AAaO,MAAMA,OAAwB,GAAG,MAAOC,MAAP,IAAkB;AACxD,QAAM;AAACC,IAAAA,IAAI,EAAEC,UAAP;AAAmBC,IAAAA,IAAnB;AAAyBC,IAAAA;AAAzB,MAA0CJ,MAAhD;AACA,QAAMC,IAAI,GAAG,MAAMI,uBAAcC,WAAd,CAA0BJ,UAA1B,CAAnB;AACA,QAAMK,MAAM,GAAG,iCAAoB;AAACH,IAAAA;AAAD,GAApB,CAAf;AACA,QAAMI,SAAS,GAAG,4BAAeP,IAAf,CAAlB;AACA,QAAMQ,MAAM,GAAG,8BAAiB;AAAEN,IAAAA,IAAI,EAAEO,MAAM,CAACP,IAAD;AAAd,GAAjB,EAAyC,CACtD,oBACEI,MADF,EAEEC,SAFF,CADsD,CAAzC,CAAf;AAOA,SAAOC,MAAM,CAACR,IAAI,CAACU,KAAN,CAAb;AACD,CAbM","sourcesContent":["import \"source-map-support/register\";\n\nimport { createHTTPServer } from \"./components/router\";\nimport { createMockGenerator } from \"./components/mocker\";\nimport SwaggerParser from \"swagger-parser\";\nimport { getMethodModel } from \"./components/parser\";\nimport { compose } from \"./components/utils\";\n\nimport type Application from 'koa';\nimport type { OpenAPI } from \"openapi3-flowtype-definition\";\n\ntype Config = {\n  port: string,\n  spec: string,\n  imageProvider: string\n}\n\ntype SmoggerFunction = (config: Config) => Promise<Application>;\n\nexport const Smogger: SmoggerFunction = async (config) => {\n  const {spec: pathToSpec, port, imageProvider} = config;\n  const spec = await SwaggerParser.dereference(pathToSpec);\n  const mocker = createMockGenerator({imageProvider});\n  const getMethod = getMethodModel(spec);\n  const router = createHTTPServer({ port: Number(port) }, [\n    compose(\n      mocker,\n      getMethod\n    )\n  ]);\n\n  return router(spec.paths);\n};\n"],"file":"index.js"}